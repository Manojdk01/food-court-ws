{"mappings":"A,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,E,Q,C,Q,S,C,C,C,E,O,c,C,E,O,C,a,C,M,C,E,a,C,C,G,O,c,C,E,O,C,U,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,G,I,E,E,S,E,E,S,E,E,S,E,E,SCIA,IAAM,EAAU,CAAC,CAAA,GAAC,CAAE,CAAA,MAAE,CAAK,CAAA,YAAE,CAAW,CAAA,UAAE,CAAS,CAAA,aAAE,CAAY,CAAE,GAI/D,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAFH,CAEO,UAAU,8C,S,CACb,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,CAAK,UAAU,oC,S,CACb,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,KAAD,CAAI,UAAU,mCAAoC,SAAA,C,GAElD,EACA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,SAAQ,CADT,CACW,QAAS,IAAM,EAAa,CAAA,GAAQ,UAAU,gBAEzD,GAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,WAAU,CAAX,CAAa,QAAS,IAAM,EAAa,CAAA,GAAO,UAAU,gB,G,A,GAG3D,GAAa,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,IAAd,CAAgB,UAAU,qBAAsB,SAAA,C,G,A,GAiCvD,IAAA,EA5Ba,KACX,GAAM,CAAC,EAAgB,EAAkB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,IAErD,MACE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MADH,CACO,UAAU,YACb,SAAA,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,CAAK,UAAU,iB,S,CACf,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,KAAD,CAAI,UAAU,4BAA4B,SAAA,M,GACzC,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAAI,GAAA,CAAI,AAAC,GAEN,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EADH,CAC6B,GAAI,EAAS,EAAb,CAAiB,MAAO,EAAS,KAAhB,CAAuB,YAAa,EAAS,WAAtB,CACnE,UAAW,IAAmB,EAAS,EAAvC,CACA,aAAc,AAAC,IACV,EACD,EAAkB,EAAS,EAD7B,EAGE,EAAkB,IAEtB,CARc,EAAA,EAAS,EAAT,G,A,E,EAiBxB,C","sources":["<anon>","src/components/Help.js"],"sourcesContent":["function $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequire2bed\"];\nparcelRequire.register(\"3IQzB\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", function () { return $2b5e4320eaba0772$export$2e2bcd8739ae039; });\n\nvar $bbzbN = parcelRequire(\"bbzbN\");\n\nvar $7fPBF = parcelRequire(\"7fPBF\");\n\nvar $ea2JU = parcelRequire(\"ea2JU\");\n\nvar $6dOY2 = parcelRequire(\"6dOY2\");\nconst $2b5e4320eaba0772$var$Section = ({ id: id, title: title, description: description, isVisible: isVisible, setIsVisible: setIsVisible })=>{\n    return /*#__PURE__*/ (0, $bbzbN.jsxs)(\"div\", {\n        className: \"flex flex-col shadow rounded-md p-2.5 m-2.5\",\n        children: [\n            /*#__PURE__*/ (0, $bbzbN.jsxs)(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: [\n                    /*#__PURE__*/ (0, $bbzbN.jsx)(\"h3\", {\n                        className: \"font-semibold text-lg text-title\",\n                        children: title\n                    }),\n                    isVisible ? /*#__PURE__*/ (0, $bbzbN.jsx)((0, $ea2JU.SlArrowUp), {\n                        onClick: ()=>setIsVisible(false),\n                        className: \"cursor-pointer\"\n                    }) : /*#__PURE__*/ (0, $bbzbN.jsx)((0, $ea2JU.SlArrowDown), {\n                        onClick: ()=>setIsVisible(true),\n                        className: \"cursor-pointer\"\n                    })\n                ]\n            }),\n            isVisible && /*#__PURE__*/ (0, $bbzbN.jsx)(\"p\", {\n                className: \"text-bio text-base\",\n                children: description\n            })\n        ]\n    });\n};\nconst $2b5e4320eaba0772$var$Help = ()=>{\n    const [visibleSection, setVisibleSection] = (0, $7fPBF.useState)(\"\"); /* Initially description of all questions are hidden */ \n    return /*#__PURE__*/ (0, $bbzbN.jsx)(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/ (0, $bbzbN.jsxs)(\"div\", {\n            className: \"card-container\",\n            children: [\n                /*#__PURE__*/ (0, $bbzbN.jsx)(\"h1\", {\n                    className: \"card-container-title pb-5\",\n                    children: \" FAQ\"\n                }),\n                (0, $6dOY2.FAQ).map((question)=>{\n                    return /*#__PURE__*/ (0, $bbzbN.jsx)($2b5e4320eaba0772$var$Section, {\n                        id: question.id,\n                        title: question.title,\n                        description: question.description,\n                        isVisible: visibleSection === question.id,\n                        setIsVisible: (display)=>{\n                            if (display) setVisibleSection(question.id);\n                            else setVisibleSection(\" \");\n                        }\n                    }, question.id);\n                })\n            ]\n        })\n    });\n};\nvar $2b5e4320eaba0772$export$2e2bcd8739ae039 = $2b5e4320eaba0772$var$Help;\n\n});\n\n\n//# sourceMappingURL=Help.5072192b.js.map\n","import { useState } from \"react\";\nimport { SlArrowDown, SlArrowUp } from \"react-icons/sl\";\nimport { FAQ } from \"../config\";\n\nconst Section = ({id, title, description, isVisible, setIsVisible }) => {\n  \n  return (\n    \n    <div className=\"flex flex-col shadow rounded-md p-2.5 m-2.5\">\n      <div className=\"flex justify-between items-center\"> \n        <h3 className=\"font-semibold text-lg text-title\">{title}</h3>\n        {\n        isVisible ? (\n        <SlArrowUp onClick={() => setIsVisible(false)} className=\"cursor-pointer\" />\n      ) : (\n        <SlArrowDown onClick={() => setIsVisible(true)} className=\"cursor-pointer\" />\n      )}\n      </div>\n      {isVisible && <p className=\"text-bio text-base\">{description}</p>}\n    </div>\n  );\n};\n\nconst Help = () => {\n  const [visibleSection, setVisibleSection] = useState(\"\"); /* Initially description of all questions are hidden */\n\n  return (\n    <div className=\"container\">\n      <div className=\"card-container\">\n      <h1 className=\"card-container-title pb-5\"> FAQ</h1>\n      {FAQ.map((question) => {\n        return (\n          <Section key={question.id} id={question.id} title={question.title} description={question.description}\n          isVisible={visibleSection === question.id }\n          setIsVisible={(display) => {\n            if(display) {\n              setVisibleSection(question.id);\n            } else {\n              setVisibleSection(\" \");\n            }\n          }\n          } />\n  \n        )\n      }\n      )}\n      </div>\n    </div>\n  );\n};\n\nexport default Help;\n"],"names":["parcelRequire","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","value","configurable","get","$2b5e4320eaba0772$export$2e2bcd8739ae039","set","s","enumerable","$bbzbN","$7fPBF","$ea2JU","$6dOY2","$2b5e4320eaba0772$var$Section","id","title","description","isVisible","setIsVisible","jsxs","className","children","jsx","SlArrowUp","onClick","SlArrowDown","visibleSection","setVisibleSection","useState","FAQ","map","question","display"],"version":3,"file":"Help.5072192b.js.map"}